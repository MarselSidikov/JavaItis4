------------------
http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html
java -version
javac -version (прописать в переменную среды Path путь к папке bin jdk)

Установить: Sublime Text 2, либо Atom, Notepad++
Командная строка: https://git-scm.com/downloads, команды cd, ls

-----------------

1) Преобразование типа - преобразование значения одного типа в другое.
2) Неявное преобразование - выполняется от меньшего к большему автоматически. int -> double. Например: double y = 7;
3) Явное преобразование - преобразование между типами с потерей результата. Для того, чтобы программист всегда видел, что результат может быть потерян, необходимо записывать инструкцию преобразования явно:
double -> int необходимо: int x = (int)7.8;

------------------------------
Изучить: ASCII и UNICODE

ASCII - таблица символов, номер_символа = сам_символ
0..32 - управлящие символы, '\n' - символ перехода на новую строку, '\t' - символ табуляции
32 - 127 - символы английского алфавита
128 - 255 - все остальное

UNICODE - таблица символов, но каждый символ занимает 2 байта
------------------------------
Бема-Якоппини - что любой алгоритм можно выразить с помощью комбинации трех структур управления - линейная структура управления, условная структура управления, цикл.

Алгоритм - последовательность операций
1) Ввод
2) Вывод
3) Эффективность
4) Конечность
5) Детерминированность/однозначность

Задача: есть набор чисел A = {a1, a2, ..., an}

n -> бескон	ечность
an = -1

Посчитать сумму чисел. Посчитать сумму четных чисел.

TaskN
ДЗ на числа:
1) Клиент приходит в банк, и просит снять сумму определенную, надо вывести:
5000 - 
1000 - 
500 - 
100 - 
50 -
10 - 
5 - 
2 - 
1 -
2) Сумма цифр считанного числа
ДЗ на последовательности:
3) Посчитать сумму отрицательных чисел
4) Посчитать произведение положительных И сумму нечетных чисел
5) Посчитать произведение чисел, сумма цифр которых оканчивается на 7
6) Посчитать сумму чисел, порядок вхождения которых - четное число

Определение:
Массив - набор элементов фиксированного размера, каждый из которых доступен по индексу.
- грубо говоря: массив - набор пронумерованных переменных

ДЗ на массивы:
7) Сумма чисел массива
8) Сумма элементов, стоящих на нечетных позициях
9) Количество локальных максимумов a[i-1] <= a[i] > a[i+1]

ДЗ:
10) Степени двойки
11) ДОДЕЛАТЬ/СДЕЛАТЬ/ПЕРЕДЕЛАТЬ домашки
12) Пусть есть два массива символов text[], word[], длина word < длина text. Надо найти позицию, с которой word входит в text
char text[] = {'H', 'e, 'l', 'l', 'l', 'o'};
char word[] = {'l','l','o'};
result - 3
13) Попробовать реализовать через Кнута-Морриса-Пратта

-----------------------------------
Подпрограмма - программа внутри основной программы. Подпрограмма может быть многократно вызвана. У подпрограммы обязательно есть имя. Подпрограммы могут иметь формальные параметры. Подпрограммы делятся на две группы
	1. функции - подпрограммы, которые явно возвращают результат своего выполнения.
		y = f(x);
		f - название функции
		x - формальный параметр функции

		6 = f(7);
		7 - аргумент, подставляется в формальный параметр

		// объявление функции
		// int - тип возвращаемого значения
		// sum - название функции
		// int a, int b - формальные параметры
		// return - оператор возврата
		public static int sum(int a, int b) {
			int result = a + b;
			return result;
		}

	public static void main(String[] args) {
		int x = 7;
		int y = 8;
		//x, y - аргументы
		//sum(x,y) - вызов функции
		// x копируется в a, y копируется в b
		// результат их суммы будет вместо вызова
		int sumXY = sum(x, y);

		System.out.println(sumXY);
	}

	Если функции имеют одинаковые названия, но разные формальные параметры - они называются перегруженными.

ДЗ на функции:
14) Написать функции, которые ищут минимальный и максимальный элементы массива
15) Написать фукнцию, решающую квадратное уравнение. Она должна возвращать массив корней
	
	2. процедуры - это подпрограмма, которая явно не возвращает значения своего выполнения, но, обязательно обладает побочным эффектом

16) Написать процедуру, которая выводит минимальные числа в каждой строке
17) Написать процедуру, которая выводит минимальные числа в каждом столбце
18) Написать процедуру, котрая выводит максимальное число на побочной диагонали квадратной матрицы
19) попробовать написать оптимальный вариант фибонначи
-----------------------------------------------------------
Примитивные типы: int, char, boolean, double, byte, long, float, short (приведение типов - явное и неявное)
Ссылочные типы - массивы (они хранят ссылку на значение)
Базовые конструкции java - if, while, for
Подпрограммы (тип возвращаемого значения, return, формальные параметры и аргументы) - функции (непосредственно возвращают значения, процедуры - непосредственно значения не возвращают, тип возвращаемого значения - void). Подпрограммы в java - методы.
Массивы - выделение памяти (new), явная инициализация
Многомерные массивы.
Рекурсия - стек вызовов.
-----------------------------------------------------------
Объект - некоторая сущность, обладающая состоянием (свойства) и поведением (действия).
Маша
СОСТОЯНИЕ:
- пол: женский
- возраст: 24
- рост: 1 71
- вес: 49
- цвет волос: Рыжий
- цвет глаз: зеленый
- профессия: ведьма
ПОВЕДЕНИЕ:
- наколдавать()
- приворожить()
Класс - абстрактный тип данных (ссылочный), (описывается методом абстракции - выделение значимых характеристик в контексте решаемой задачи). Класс описывает возможные состояния и поведения объекта.
Объект - экземпляр класса.
-------------------------------
Класс - отдельный файл (обычно), файл и класс имеют (обязательно) ОДНО НАЗВАНИЕ.

Human marsel; - объявление объектной переменной (переменная, указывающая на объект, изначально - null).
marsel = new Human(); - создание объекта, теперь marsel указывает на объект.
Поля (члены класса) - переменные внутри класса. Конкретные значения полей задают состояние объекта.

Инстантивация - создание объекта (instance), оператор new.   
Инициализация - задание начального состояния объекта.

Конструктор (не является членом класса) - набор инструкций внутри класса, которые говорят, как именно нужно инициализировать объект. По виду конструктор очень сильно похож на метод, имеет название(такое же, как и класс, может иметь формальные параметры, но не имеет типа возвращаемого значения, и не является методом вообще).

В джава по умолчанию для каждого класса автоматически создается пустой конструктор (конструктор по умолчанию).
Переопределение конструктора - написание своего конструктора с нужными действиями инициализации.
Если вы определили свой конструктор с параметрами, то конструктора по умолчанию больше нет.

Класс - поля, конструктор (чтобы отдельно не писать инструкции по заданию начального состояния.)

Метод(член класса) - подпрограмма внутри класса. Описывает поведение объекта. Вызывается непосредственно из созданного объекта.

Парадигма программирования - стиль организации вычислений внутри программы + стиль мышления программиста.

Парадигма процедурного программирования:
программа = алгоритм + структура данных (С, Pacsal, Basic)
+ хорошая ориентация на алгоритмы
+ большое внимание уделяется оптимизации структур данных
- спагетти код (функция вызывает функцию, которая вызывает функцию)
- описать сущности конкретные достаточно трудно
- незащищенность данных

Парадигма логического программирования:
программа = логические придикаты (функции принимающие значение истина и ложь - язык Prolog)

Парадигма функционального программирования:
программа = функция

Парадигма объектно-ориентированного программирования:
программа = объекты, посылающие друг другу сообщения

Четыре кита ООП
1) Абстракция
2) Инкапсуляция 
	2.1 Совмещение алгоритмов и структур данных в одной сущности-капсуле - объект.
	2.2 Возможность обеспечения защиты внутреннй структуры данных
3) Наследование
4) Полиморфизм

Задача - посчитать количество людей определенных возрастов (решили на паре).

Уровень доступа - публичный, приватный, защищенный, публичный в пакете
Модификатор доступа - public, private, protected, (не указывается)

Метод доступа - вспомогательный метод, который позволяет контролируемо работать с защищенными данными

ИТОГО:

Класс состоит из:
1) Приватных (private) полей
2) Конструкторов (пустого и с формальными параметрами)
3) Методы 
4) Методы доступа - getters/setters (getИмяПоля, setИмяПоля)

20) Сортировать людей по возрасту используя ООП (методом пузырька) - задать массив из 15 человек.

---------------------------------------------
Статические члены класса и статические инициализаторы.

Статическое поле (с модификатором static) - глобально для всех объектов.

ДЗ ДОПОЛНИТЕЛНО - все по static (поля, инициализаторы)

СОВЕТЫ:

1) Создавать неизменяемые объекты.Начальное состояние передавать в конструкторе, там выполнять все проверки, а доступ к изменению - не давать. (поля закрыты, сеттеров нет)